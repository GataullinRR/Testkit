@page "/profile" 
@page "/profile/{UserName}"
@inject IIdentityContext Context;
@inject UserService.UserServiceClient UserService;
@inject ICookieStorage Cookies;
@inject IMessageService Messages;

    <RootContainer>
        @if (_userInfo != null)
        {
            <KVP Name="User">@_userInfo.UserName</KVP>
            <KVP Name="E-Mail">@_userInfo.EMail.DefaultToString("-")</KVP>
            <KVP Name="Phone">@_userInfo.Phone.DefaultToString("-")</KVP>
        }
        else
        {
            <span>Not authorized</span>
        }
    </RootContainer>

@code {
    public static string BuildPathToCurrentUser()
    {
        return $"/profile";
    }
    public static string BuildPath(string userName)
    {
        return $"/profile/{userName}";
    }

    GetUserInfoResponse? _userInfo;

    [Parameter]
    public string? UserName { get; set; }

    protected override async Task OnParametersSetAsync()
    {
        if (UserName == null) // this user
        {
            _userInfo = Context.Identity.User;
        }
        else
        {
            var response = await UserService.GetUserInfoAsync(new GGetUserInfoRequest()
            {
                Token = await Cookies.GetValueAsync(Constants.AUTH_TOKEN_COOKIE) ?? "",
                UserName = UserName
            });

            if (response.Status.Code == StatusCode.Ok)
            {
                _userInfo = response;
            }
            else
            {
                Messages.AddMessage(response.Status.Description);
            }
        }

        await base.OnParametersSetAsync();
    }
}
