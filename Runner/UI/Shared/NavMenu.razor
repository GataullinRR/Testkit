@inject IIdentityContext Identity; 
@inject ICookieStorage Cookies; 
@inject IUserChangeNotifier ChangeNotifier;
@inject NavigationManager NavigationManager;

<div class="top-row pl-4 navbar navbar-dark">
    <a class="navbar-brand" href="">QAAP</a>
    <button class="navbar-toggler" @onclick="ToggleNavMenu">
        <span class="navbar-toggler-icon"></span>
    </button>
</div>

<div class="@NavMenuCssClass" @onclick="ToggleNavMenu">
    <ul class="nav flex-column">
        @if (Identity.Identity.IsAuthentificated)
        {
            <li class="nav-item px-3">
                <NavLink class="nav-link" @onclick="signOutAsync">
                    <span class="oi oi-list-rich" aria-hidden="true"></span> Sign out
                </NavLink>
            </li>
        }
        else
        {
            <li class="nav-item px-3">
                <NavLink class="nav-link" href="@Runner.UI.Pages.Authentification.BuildPath()">
                    <span class="oi oi-list-rich" aria-hidden="true"></span> Sign in
                </NavLink>
            </li>
        }
        <li class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span class="oi oi-home" aria-hidden="true"></span> Tests
            </NavLink>
        </li>
        @if (Identity.Identity.IsAuthentificated)
        {
            <li class="nav-item px-3">
                <NavLink class="nav-link" href="@Runner.UI.Pages.AddTest.BuildPath()">
                    <span class="oi oi-plus" aria-hidden="true"></span> Add test
                </NavLink>
            </li>
            <li class="nav-item px-3">
                <NavLink class="nav-link" href="@Runner.UI.Pages.Profile.BuildPathToCurrentUser()">
                    <span class="oi oi-list-rich" aria-hidden="true"></span> Profile
                </NavLink>
            </li>
        }
        <li class="nav-item px-3">
            <NavLink class="nav-link" href="about">
                <span class="oi oi-list-rich" aria-hidden="true"></span> About
            </NavLink>
        </li>
    </ul>
</div>

@code {
    bool collapseNavMenu = true;

    string NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

    protected override async Task OnInitializedAsync()
    {
        ChangeNotifier.IdentityChangedAsync += async () => StateHasChanged();
    }

    async Task signOutAsync()
    {
        await Cookies.SetAsync(Constants.AUTH_TOKEN_COOKIE, null);

        await ChangeNotifier.FireAuthStateChangedAsync();

        NavigationManager.NavigateTo("");
    }
}
