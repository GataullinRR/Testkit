
@if (Tests == null)
{
    <div>Loading...</div>
}
else
{
<table class="table">
    <thead>
        <tr>
            <th></th>
            <th>Target</th>
            <th>Description</th>
            <th>Last run</th>
            <th>Next run</th>
            <th>Author</th>
            <th>Action</th>
        </tr>
    </thead>

    <tbody>
        @foreach (var test in Tests)
        {
            <tr>
                <td>
                    @test.LastResult.Result
                </td>

                <td>
                    <NavLink href="@TestTarget.BuildPath(test.TestId)">@test.TestId</NavLink>
                </td>

                <td>@test.Target.DisplayName</td>

                <td>@(test.LastResult == null ? "" : test.LastResult.StartTime.ToString())</td>

                <td>
                    @switch (test.RunPlan.RunPlan)
                    {
                        case RunPlan.Manual:
                            <text>Manual</text>
                            break;
                        case RunPlan.Periodic:
                            <text>@(test.RunPlan.To<PeriodicRunPlan>().NextRun.ToString())</text>
                            break;

                        default:
                            throw new NotSupportedException();
                    }
                </td>

                <td>
                    <NavLink href="@UI.Pages.Profile.BuildPath(test.Author.UserName)">@test.Author.UserName</NavLink>
                </td>

                <td>
                    @switch (test.State.State)
                    {
                        case State.AwaitingStart:
                        case State.Running:
                            <text>
                                <button class="btn btn-primary">Cancel</button>
                            </text>
                            break;
                        case State.Suspended:
                            <text>
                                <button class="btn btn-primary">Continue</button>
                            </text>
                            break;

                        default:
                            throw new NotSupportedException();
                    }
                </td>
            </tr>
        }
    </tbody>
</table>
}

@code {
    [Parameter]
    public IEnumerable<TestInfo> Tests { get; set; }
}