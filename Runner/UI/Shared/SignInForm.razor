<FormBase Title="Sign in" ButtonName="Sign in!" Model="_model" Entries="_fields" OnSubmit="onSubmit">
    <InlineButton @onclick="OnRegistrationRequest">I don't have an account</InlineButton>
</FormBase>

@code {
    public class SignInPresentationModel
    {
        public static implicit operator SignInRequest(SignInPresentationModel model)
        {
            return new SignInRequest(model.UserName, model.Password);
        }

        [Required]
        public string UserName { get; set; }

        [Required, DataType(DataType.Password)]
        public string Password { get; set; }
    }

    readonly SignInPresentationModel _model = new SignInPresentationModel();

    IEnumerable<FormBase.FieldEntry> _fields { get; set; }

    [Parameter]
    public Action<SignInPresentationModel> OnSubmit { get; set; } = delegate { };

    [Parameter]
    public Action OnRegistrationRequest { get; set; } = delegate { };

    protected override void OnInitialized()
    {
        _fields = new FormBase.FieldEntry[]
        {
            new FormBase.FieldEntry("Your name", @<InputText class="form-control" @bind-Value="_model.UserName" />),
            new FormBase.FieldEntry("Password", @<InputText class="form-control" type="password" @bind-Value="_model.Password" />)
        };

        base.OnInitialized();
    }

    void onSubmit()
    {
        OnSubmit(_model);
    }
}