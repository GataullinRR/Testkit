<FormBase Title="Registration" ButtonName="Sign me up!" Model="_model" Entries="_fields" OnSubmit="onSubmit">
    <InlineButton @onclick="OnSignInRequest">I already have an account</InlineButton>
</FormBase>

@code {
    public class SignUpPresentationModel
    {
        public static implicit operator SignUpRequest(SignUpPresentationModel model)
        {
            return new SignUpRequest(model.UserName, model.Password, model.Phone, model.Email);
        }

        [Required]
        public string UserName { get; set; }

        [Required, DataType(DataType.Password)]
        public string Password { get; set; }

        [Required, Phone, DataType(DataType.PhoneNumber)]
        public string Phone { get; set; }

        [Required, EmailAddress, DataType(DataType.EmailAddress)]
        public string Email { get; set; }

        [Required, Compare(nameof(Password)), DataType(DataType.Password)]
        public string PasswordConfirmation { get; set; }
    }

    SignUpPresentationModel _model { get; } = new SignUpPresentationModel();

    IEnumerable<FormBase.FieldEntry> _fields { get; set; }

    [Parameter]
    public Action<SignUpPresentationModel> OnSubmit { get; set; } = delegate { };

    [Parameter]
    public Action OnSignInRequest { get; set; } = delegate { };

    protected override void OnInitialized()
    {
        _fields = new FormBase.FieldEntry[]
        {
            new FormBase.FieldEntry("Your name", @<InputText class="form-control" @bind-Value="_model.UserName" />),
            new FormBase.FieldEntry("Password", @<InputText class="form-control" type="password" @bind-Value="_model.Password" />),
            new FormBase.FieldEntry("Password confirmation", @<InputText type="password" class="form-control" @bind-Value="_model.PasswordConfirmation" />),
            new FormBase.FieldEntry("E-Mail", @<InputText class="form-control" @bind-Value="_model.Email" />),
            new FormBase.FieldEntry("Phone", @<InputText class="form-control" @bind-Value="_model.Phone" />),
        };

        base.OnInitialized();
    }

    void onSubmit()
    {
        OnSubmit(_model);
    }
}