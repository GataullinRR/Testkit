@inject IMessageService MessageService

@*<div class="col-12">
    @foreach (var msg in MessageService.Messages)
    {
        <div class="d-flex p-3 message">
            <div class="flex-grow-1">@msg.Text</div>
            <div class="ml-2">
                <InlineButton class="action-primary" @onclick="() => close(msg)">Dismiss</InlineButton>
            </div>
        </div>
    }
</div>*@

<div class="col-12">
    <div class="d-flex p-3 message">
        <div class="flex-grow-1"><span>@(MessageService.Messages.LastElementOrDefault()?.Text ?? " ")</span></div>
        <div class="ml-2">
            @if (MessageService.Messages.Count > 0)
            {
                <InlineButton class="action-primary" @onclick="() => close(MessageService.Messages.LastElement())">Dismiss</InlineButton>
            }
        </div>
    </div>
</div>

@code {
    protected override void OnInitialized()
    {
        base.OnInitialized();

        MessageService.Messages.CollectionChanged += (o, e) =>
        {
            StateHasChanged();
        };
    }

    void close(Message? msg)
    {
        MessageService.Messages.Remove(msg);

        StateHasChanged();
    }
}
